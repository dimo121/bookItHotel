{"version":3,"sources":["services/config.ts","services/AuthService.ts","utils/history.ts","components/Login.tsx","components/Navbar.tsx","components/Profile.tsx","components/Home.tsx","assets/hotel.jpg","components/spaces/SpaceComponent.tsx","components/spaces/ConfirmModalComponent.tsx","components/spaces/Spaces.tsx","services/DataService.ts","components/spaces/CreateSpace.tsx","components/router/App.tsx","index.tsx"],"names":["spacesUrl","config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","SPACES_PHOTO_BUCKET","api","baseUrl","Amplify","configure","Auth","mandatorySignIn","region","userPoolId","userPoolWebClientId","identityPoolId","authenticationFlowType","AuthService","username","password","signIn","user","cognitoUser","getUsername","undefined","result","userAttributes","attributes","push","cognitoUserPool","AWS","credentials","IdentityPoolId","Logins","getSignInUserSession","getIdToken","getJwtToken","this","refreshCredentials","Promise","resolve","reject","refresh","err","createBrowserHistory","Login","state","loginAttempted","loginSuccesful","e","preventDefault","setState","props","authService","login","setUser","history","console","log","event","target","value","loginMessage","onSubmit","onChange","onUserChange","placeholder","onPasswordChange","type","React","Component","Navbar","loginLogOut","to","style","float","className","Profile","a","getUserAttributes","userAtrs","rows","userAttribute","Name","Value","profileSpace","renderUserAttributes","Home","SpaceComponent","photoUrl","src","alt","img","width","height","name","spaceId","location","onClick","reserveSpace","ConfirmModalComponent","show","content","close","Spaces","spaces","showModal","modalContent","bind","renderSpaces","closeModal","dataService","getSpaces","reservationResult","forEach","space","idx","update","appConfig","DataService","dataSpaces","file","bucket","fileName","S3","upload","Bucket","Key","Body","ACL","promise","uploadResult","Location","iCreateSpace","photo","uploadPublicFile","photoURL","requestUrl","requestOptions","method","body","JSON","stringify","fetch","json","resultJSON","id","CreateSpace","description","files","stateClone","createSpace","photoSpace","localPhotoURL","URL","createObjectURL","handleSubmit","setName","setLocation","setDescription","setPhotoUrl","data-test","App","getAWSTemporaryCreds","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8920f4a2.chunk.js","sourcesContent":["const spacesUrl = '\thttps://35wqd3ztkd.execute-api.ap-southeast-2.amazonaws.com/prod/';\n\nexport const config = {\n    REGION: 'ap-southeast-2',\n    USER_POOL_ID: 'ap-southeast-2_EcdMNVail',\n    APP_CLIENT_ID: '327v0ohcahj7j03e7oumaiknsd',\n    IDENTITY_POOL_ID: 'ap-southeast-2:bc55e356-6b52-4c67-8f81-62150f983da3',\n    SPACES_PHOTO_BUCKET: 'spaces-photos-0a066d6e213a',\n    api: {\n        baseUrl : spacesUrl,\n        spacesUrl : `${spacesUrl}spaces`\n    }\n}","import { User, UserAttribute } from '../model/Model';\nimport { Auth } from 'aws-amplify';\nimport Amplify from 'aws-amplify';\nimport { config } from './config';\nimport { CognitoUser } from '@aws-amplify/auth';\nimport * as AWS from 'aws-sdk';\nimport { Credentials } from 'aws-sdk/lib/credentials';\n\n\nAmplify.configure({\n    Auth: {\n        mandatorySignIn: false,\n        region: config.REGION,\n        userPoolId: config.USER_POOL_ID,\n        userPoolWebClientId: config.APP_CLIENT_ID,\n        identityPoolId: config.IDENTITY_POOL_ID,\n        authenticationFlowType: 'USER_PASSWORD_AUTH'\n    }\n})\n\nexport class AuthService {\n\n    public async login(username: string, password:string): Promise<User|undefined>{\n        try{\n            const user = await Auth.signIn(username, password) as CognitoUser;\n            return {\n                cognitoUser: user,\n                username: user.getUsername()\n            };\n        } catch (error){\n            return undefined;\n        }\n    }\n\n    public async getUserAttributes(user: User):Promise<UserAttribute[]>{\n        const result : UserAttribute[] = []\n        const attributes = await Auth.userAttributes(user.cognitoUser);\n        result.push(...attributes);\n        return result;\n    }\n\n    public async getAWSTemporaryCreds(user:CognitoUser){\n        const cognitoUserPool = `cognito-idp.${config.REGION}.amazonaws.com/${config.USER_POOL_ID}`;\n        AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId: config.IDENTITY_POOL_ID,\n            Logins: {\n                [cognitoUserPool]: user.getSignInUserSession()!.getIdToken().getJwtToken()\n            }\n        }, {\n            region: config.REGION\n        });\n        await this.refreshCredentials()\n    }\n\n    private async refreshCredentials(): Promise<void>{\n        return new Promise((resolve,reject) => {\n            (AWS.config.credentials as Credentials).refresh(err => {\n                if(err){\n                    reject(err)\n                } else{\n                    resolve()\n                }\n            })\n        })\n    }\n}","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React from 'react';\nimport { AuthService } from '../services/AuthService';\nimport { User } from '../model/Model';\nimport history from '../utils/history';\n\n\ninterface LoginProps{\n    authService: AuthService,\n    setUser: (user:User) => void\n}\n\ninterface LoginState {\n    username: string,\n    password: string,\n    loginAttempted: boolean,\n    loginSuccesful: boolean\n}\n\ninterface CustomEvent {\n    target: HTMLInputElement\n}\n\nexport class Login extends React.Component<LoginProps,LoginState>{\n\n    state: LoginState = {\n        username: '',\n        password: '',\n        loginAttempted: false,\n        loginSuccesful: false\n    }\n\n    private async onSubmit(e:React.FormEvent<HTMLFormElement>):Promise<void>{\n        e.preventDefault();\n        this.setState({loginAttempted: true})\n        const result = await this.props.authService.login(\n            this.state.username,\n            this.state.password\n        )\n        if (result) {\n            this.setState({loginSuccesful: true})\n            this.props.setUser(result)\n            history.push('./profile')\n        } else {\n            this.setState({loginSuccesful: false})\n            console.log('wrong login')\n        }\n    }\n\n    private onUserChange(event:CustomEvent){\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    private onPasswordChange(event:CustomEvent){\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    render(){\n        let loginMessage:any;\n        if (this.state.loginSuccesful) {\n            loginMessage = <label>Login successful</label>\n        } else if(this.state.loginAttempted){\n            loginMessage = <label>Login failed</label>\n        }\n\n        return (\n            <>\n            <h2>Please login!</h2>\n            <form onSubmit={event => this.onSubmit(event)}>\n                <input  onChange={e => this.onUserChange(e)} \n                        placeholder='Username...' \n                        value={this.state.username}/>\n                    <br/>   \n                <input  onChange={e => this.onPasswordChange(e)}\n                        placeholder='Password...' \n                        value={this.state.password} \n                        type='password'/>\n                    <br/>   \n                <button type='submit' >Login</button>\n            </form>\n            {loginMessage}\n            </>\n        )\n    }\n}","import React from 'react';\nimport { User } from '../model/Model';\nimport { Link } from 'react-router-dom';\n\n\nexport class Navbar extends React.Component<{user:User|undefined}>{\n\n\n\n    render(){\n\n        let loginLogOut : any;\n        if (this.props.user) {\n            loginLogOut = <Link to='/logout' style={{float:'right'}}>{this.props.user.username}</Link>\n        } else {\n            loginLogOut = <Link to='/login' style={{float:'right'}}>Login</Link>\n        }\n\n        return(\n            <div className='navbar'>\n                <Link to='/'>Home</Link>\n                <Link to='/profile'>Profile</Link>\n                <Link to='/spaces'>Spaces</Link>\n                {loginLogOut}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { User, UserAttribute } from '../model/Model';\nimport { AuthService } from '../services/AuthService';\nimport { Link } from 'react-router-dom';\n\n\ninterface ProfileState {\n    userAttributes: UserAttribute[]\n}\n\ninterface ProfileProps {\n    user : User | undefined,\n    authService: AuthService\n}\n\nexport class Profile extends React.Component<ProfileProps,ProfileState>{\n\n    state:ProfileState = {\n        userAttributes: []\n    }\n\n    async componentDidMount(){\n        if(this.props.user){\n            const userAtrs = await this.props.authService.getUserAttributes(this.props.user)\n            this.setState({ userAttributes: userAtrs})\n        }\n    }\n\n    private renderUserAttributes(){\n        const rows = []\n        \n        for (const userAttribute of this.state.userAttributes) {\n            rows.push(<tr key={userAttribute.Name}>\n                <td>{userAttribute.Name}</td>\n                <td>{userAttribute.Value}</td>\n            </tr>)\n        }\n\n        return <table>\n            <tbody>\n                {rows}\n            </tbody>\n        </table>\n    }\n\n    render(){\n\n        let profileSpace;\n        if(this.props.user){\n            profileSpace = <div>\n                            <h3>Hello {this.props.user.username}</h3>\n                            <br/>\n                                Here are your attributes:\n                            <br/>\n                            {this.renderUserAttributes()}\n                        </div>\n        }else{\n            profileSpace = <Link to='login'>Please login</Link>\n        }\n\n        return(\n            <div>\n                This is the profile page\n                {profileSpace}\n            </div>\n        )\n    }\n}","import React from 'react';\n\n\nexport class Home extends React.Component{\n\n\n\n    render(){\n        return(\n            <div>Welcome to the Home page.</div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/hotel.34dba7aa.jpg\";","import React from 'react';\nimport img from '../../assets/hotel.jpg'\n\n\ninterface IProps {\n    spaceId: string;\n    name: string;\n    location: string;\n    photoUrl?: string;\n    reserveSpace: (spaceId: string) => void;\n}\n\nexport class SpaceComponent extends React.Component<IProps,{}>{\n\n\n    render(){\n        return(\n            <div className='space-component'>\n                { this.props.photoUrl ? <img src={this.props.photoUrl} alt='' /> : <img src={img} alt='' style={{ width:'12em', height:'15em'}} /> }<br/>\n                <label>{this.props.name}</label><br/>\n                <label>{this.props.spaceId}</label><br/>\n                <label>{this.props.location}</label><br/>\n                <button onClick={() => this.props.reserveSpace(this.props.spaceId)}>Reserve</button>\n                <br/>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './ConfirmModal.css';\n\ninterface IModalProps {\n    show: boolean;\n    content: string;\n    close: () => void;\n}\n\nexport class ConfirmModalComponent extends React.Component<IModalProps,{}>{\n\n    render(){\n        if (!this.props.show) {\n            return null\n        } else {\n            return (\n                <div className='modal'>\n                    <div className='modal-content'>\n                        <h2> You tried to reserve :</h2>\n                        <h3 className='modalText'>{this.props.content}</h3>\n                        <button onClick={() => this.props.close()}>Ok, Close me</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n\n}","import React from 'react';\nimport { DataService } from '../../services/DataService';\nimport { SpaceComponent } from './SpaceComponent'; \nimport { Space } from '../../model/Model';\nimport './Spaces.css';\nimport { ConfirmModalComponent } from './ConfirmModalComponent';\nimport { Link } from 'react-router-dom';\n\n\ninterface ISpacesState{\n    spaces: Space[];\n    showModal: boolean;\n    modalContent: string;\n}\n\ninterface ISpacesProps {\n    dataService: DataService;\n}\n\n\nexport class Spaces extends React.Component<ISpacesProps,ISpacesState> {\n\n    constructor(props:ISpacesProps){\n        super(props);\n\n        this.state = {\n            spaces: [],\n            showModal: false,\n            modalContent: ''\n        }\n\n        this.reserveSpace = this.reserveSpace.bind(this)\n        this.renderSpaces = this.renderSpaces.bind(this)\n        this.closeModal = this.closeModal.bind(this)\n    }\n\n    async componentDidMount(){\n        const spaces = await this.props.dataService.getSpaces();\n        this.setState({\n            spaces\n        })\n    }\n\n    private async reserveSpace(spaceId: string){\n        const reservationResult = await this.props.dataService.reserveSpace(spaceId)\n        if(reservationResult){\n            this.setState({\n                showModal: true,\n                modalContent: `You reserved the space with id ${spaceId} and reservation number ${reservationResult}`\n            });\n        } else {\n            this.setState({\n                showModal: true,\n                modalContent: `You can't reserve the space with id ${spaceId}`\n            });\n        }\n    }\n\n    private renderSpaces(){\n        const rows:any[] = []\n\n        this.state.spaces.forEach((space,idx) => \n            rows.push(<SpaceComponent \n                key={idx}\n                location={space.location}\n                name={space.name}\n                spaceId={space.spaceId}\n                reserveSpace = {this.reserveSpace}\n            />)\n        )\n\n        return rows;\n    }\n\n    private closeModal(){\n        this.setState({\n            showModal: false,\n            modalContent: ''\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Welcome to the Spaces page!</h2>\n                <Link to=\"/createSpace\">Create space</Link><br/>\n                <div className='spaces-container'>\n                    {this.renderSpaces()}\n                </div>\n                <ConfirmModalComponent \n                    show={this.state.showModal} \n                    content={this.state.modalContent} \n                    close={this.closeModal}\n                />\n            </div>\n        )\n    }\n}","import { ICreateSpaceState } from '../components/spaces/CreateSpace';\nimport { Space } from '../model/Model';\nimport { S3, config } from 'aws-sdk';\nimport { config as appConfig } from './config';\nimport { resourceLimits } from 'worker_threads';\n\nconfig.update({\n    region: appConfig.REGION\n})\n\nexport class DataService {\n\n    private dataSpaces: Space[] = [];\n\n    // constructor(){\n\n    //     this.dataSpaces = [];\n\n    //     this.getSpaces = this.getSpaces.bind(this);\n    // }\n    private async uploadPublicFile(file:File,bucket:string){\n        const fileName = file.name;\n        const uploadResult = await new S3({region: appConfig.REGION}).upload({\n            Bucket: bucket,\n            Key: fileName,\n            Body: file,\n            ACL: 'public-read'\n        }).promise();\n        return uploadResult.Location;\n    }\n\n    public async createSpace(iCreateSpace: ICreateSpaceState): Promise<string>{\n        \n        if(iCreateSpace.photo){\n            const photoUrl = await this.uploadPublicFile(\n                iCreateSpace.photo,\n                appConfig.SPACES_PHOTO_BUCKET\n            )\n            iCreateSpace.photoURL = photoUrl;\n            iCreateSpace.photo = undefined;\n        }\n        const requestUrl = appConfig.api.spacesUrl;\n        const requestOptions: RequestInit = {\n            method: 'POST',\n            body: JSON.stringify(iCreateSpace)\n        }\n        const result = await fetch(requestUrl, requestOptions);\n        const resultJSON = await result.json();\n\n        return JSON.stringify(resultJSON.id);\n    }\n\n    public async getSpaces(): Promise<Space[]>{\n        this.dataSpaces.push({\n                spaceId: '1',\n                name: 'The Retro Hotel',\n                location: \"Bondi Junction\"\n        });\n        this.dataSpaces.push({\n            spaceId: '2',\n            name: 'The Bondi Hotel',\n            location: \"Bondi Beach\"\n        });\n        this.dataSpaces.push({\n            spaceId: '3',\n            name: 'The Earlwood Inn',\n            location: \"Other\"\n        });\n        this.dataSpaces.push({\n            spaceId: '1',\n            name: 'The Retro Hotel',\n            location: \"Bondi Junction\"\n        });\n        this.dataSpaces.push({\n            spaceId: '2',\n            name: 'The Bondi Hotel',\n            location: \"Bondi Beach\"\n        });\n        this.dataSpaces.push({\n            spaceId: '3',\n            name: 'The Earlwood Inn',\n            location: \"Other\"\n        });\n        this.dataSpaces.push({\n        spaceId: '1',\n        name: 'The Retro Hotel',\n        location: \"Bondi Junction\"\n        });\n        this.dataSpaces.push({\n            spaceId: '2',\n            name: 'The Bondi Hotel',\n            location: \"Bondi Beach\"\n        });\n        this.dataSpaces.push({\n            spaceId: '3',\n            name: 'The Earlwood Inn',\n            location: \"Other\"\n        });\n        //console.log(this.dataSpaces);\n\n        return this.dataSpaces;\n    }\n\n    public async reserveSpace(spaceId:string): Promise<string|undefined>{\n        if(spaceId === '1'){\n            return ('5555')\n        }else{\n            return undefined\n        }\n    }\n\n}","import { Component, SyntheticEvent } from 'react';\nimport { DataService } from '../../services/DataService';\n\ninterface CustomEvent {\n    target: HTMLInputElement\n}\n\nexport interface ICreateSpaceState {\n    name?: string;\n    location?: string;\n    description?: string;\n    photoURL?: string;\n    photo?: File;\n}\n\ninterface ICreateSpaceProps {\n    dataService: DataService;\n}\n\nexport class CreateSpace extends Component<ICreateSpaceProps,ICreateSpaceState> {\n\n    state: ICreateSpaceState = {}\n\n    private setName(event:CustomEvent){\n        this.setState({name:event.target.value});\n    }\n\n    private setLocation(event:CustomEvent) {\n        this.setState({location: event.target.value});\n    }\n\n    private setDescription(event:CustomEvent) {\n        this.setState({description: event.target.value});\n    }\n\n    private setPhotoUrl(event:CustomEvent) {\n        if(event.target.files && event.target.files[0]){\n            this.setState({photo : event.target.files[0]});\n        }\n    }\n\n    private async handleSubmit(event:SyntheticEvent) {\n        event.preventDefault();\n        const stateClone = {...this.state};\n        try {\n            const id = await this.props.dataService.createSpace(stateClone);\n            console.log(id);\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    render(){\n        let photoSpace;\n        if(this.state.photo){\n            const localPhotoURL = URL.createObjectURL(this.state.photo);\n            photoSpace = <img alt='' src={localPhotoURL} />\n        } else {\n            photoSpace = <div></div>\n        }\n        return (\n        <form onSubmit={e => this.handleSubmit(e)}>\n            <label>Name:<br/>\n                <input name='space name' value={this.state.name} onChange={e => this.setName(e)} />\n            </label><br/>\n            <label>Location:<br/>\n                <input name='space location' value={this.state.location} onChange={e => this.setLocation(e)} />\n            </label><br/>\n            <label>Description:<br/>\n                <input name='space description' value={this.state.description} onChange={e => this.setDescription(e)} />\n            </label><br/>\n            <label>Photo:<br/>\n                <input name='space name' type='file' onChange={e => this.setPhotoUrl(e)} />\n            </label><br/>\n            {photoSpace}<br />\n            <input data-test='submit-button' type='submit' value='Create space' />\n        </form> \n        )\n    }\n}","import React from 'react';\nimport { User } from '../../model/Model';\nimport { AuthService } from '../../services/AuthService';\nimport { Login } from '../Login';\nimport { Navbar } from '../Navbar';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../../utils/history';\nimport { Profile } from '../Profile';\nimport { Home } from '../Home';\nimport { Spaces } from '../spaces/Spaces';\nimport { DataService } from '../../services/DataService';\nimport { CreateSpace } from '../spaces/CreateSpace';\n\ninterface IAppState {\n  user: User | undefined\n}\n\n\nexport class App extends React.Component<{},IAppState>{\n\n  constructor(props:any){\n    super(props);\n\n    this.state = {\n      user: undefined\n    }\n\n    this.setUser = this.setUser.bind(this)\n  }\n\n  private authService: AuthService = new AuthService();\n  private dataService: DataService = new DataService();\n\n  private async setUser(user:User){\n    this.setState({\n      user\n    })\n    await this.authService.getAWSTemporaryCreds(user.cognitoUser);\n  };\n\n  render(){\n    return (\n      <div className='main-container'>\n        <Router history={history}>\n          <div>\n            <Navbar user={this.state.user}/>\n            <Switch>\n              <Route exact path='/' component={Home}/>\n              <Route exact path='/login'>\n                <Login authService={this.authService} setUser={this.setUser}/>\n              </Route>\n              <Route exact path='/profile'>\n                <Profile authService={this.authService} user={this.state.user}/>\n              </Route> \n              <Route exact path='/spaces'>\n                <Spaces dataService={this.dataService} />\n              </Route> \n              <Route exact path='/createspace'>\n                <CreateSpace dataService={this.dataService} />\n              </Route> \n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/router/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}